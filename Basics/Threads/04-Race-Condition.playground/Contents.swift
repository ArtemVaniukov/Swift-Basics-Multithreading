import UIKit
import PlaygroundSupport


enum ExecutionType: String {
    case sync
    case async
}


let mySerialQueue = DispatchQueue.global(qos: .default)


/// –ú—ã –º–æ–∂–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø—Ä–æ—Å—Ç–µ–π—à–∏–π —Å–ª—É—á–∞–π race condition, –µ—Å–ª–∏ –±—É–¥–µ–º –∏–∑–º–µ–Ω—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é value –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –Ω–∞ private –æ—á–µ—Ä–µ–¥–∏, –∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å value –Ω–∞ —Ç–µ–∫—É—â–µ–º –ø–æ—Ç–æ–∫–µ:
var value = "ü•≥" // 1

func changeValue(variant: ExecutionType) {
    sleep(1) // 4, 9
    value += "üêî" // 10, 14
    print("\(value) - \(variant.rawValue)") // 11, 15
}

print("--- Race Condition Imitation ---")

// Async call
mySerialQueue.async { // 2
    changeValue(variant: .async) // 3
} // 16
value // check value ---------> // 5


value = "ü¶ä" // 6

// Sync call
mySerialQueue.sync { // 7
    changeValue(variant: .sync) // 8
} // 12
value // check value ---------> // 13

/// –£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—ã—á–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è value –∏ –æ–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è changeValue –¥–ª—è –µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –ø—Ä–∏—á–µ–º —É–º—ã—à–ª–µ–Ω–Ω–æ –º—ã —Å–¥–µ–ª–∞–ª–∏ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ sleep(1) —Ç–∞–∫, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π value —Ç—Ä–µ–±—É–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ï—Å–ª–∏ –º—ã –±—É–¥–µ–º –∑–∞–ø—É—Å–∫–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é changeValue –ê–°–ò–ù–•–†–û–ù–ù–û —Å –ø–æ–º–æ—â—å—é async, —Ç–æ –ø—Ä–µ–∂–¥–µ, —á–µ–º –¥–æ–π–¥–µ—Ç –¥–µ–ª–æ –¥–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π value, –Ω–∞ —Ç–µ–∫—É—â–µ–º –ø–æ—Ç–æ–∫–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è value –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —ç—Ç–æ –∏ –µ—Å—Ç—å race condition. –≠—Ç–æ–º—É –∫–æ–¥—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—á–∞—Ç—å –≤ –≤–∏–¥–µ:
